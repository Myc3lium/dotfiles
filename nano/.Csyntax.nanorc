## Here is an example for C/C++.

syntax "c" "\.(c(c|pp|xx|\+\+)?|C)$" "\.(h(h|pp|xx)?|H)$" "\.ii?$"
magic "(ASCII|UTF-8 Unicode) C(\+\+)? program text"


color brightmagenta "\<[A-Z_][0-9A-Z_]+\>"
color brightgreen "\<(string|float|double|bool|char|list|int|short|long|sizeof|enum|void|auto|static|const|struct|union|typedef|extern|(un)?signed|inline)\>"
color brightcyan "\<((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\>"
color brightgreen "\<(var|class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
color brightyellow "\<(for|if|elif|while|do|else|case|default|switch|true|false)\>"
color brightyellow "\<(try|throw|catch|operator|new|delete)\>"
color brightyellow "\<(goto|continue|break|return)\>"
color brightcyan "^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)"
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
color brightcyan "[.:;,+*|=!\%]" "<" ">" "/" "-" "&"
color brightwhite "[(){}]" "\[" "\]"


# GCC builtins.
color cyan "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

# Strings.  In general you will want your strings and comments to come last,
# because highlighting rules are applied in the order they are read in.
color brightyellow ""([^"]|\\")*"" "<[^[:blank:]=]*>"

# Multiline strings.  This regex is VERY resource intensive,
# and sometimes colours things that shouldn't be coloured.
###color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

# Comments.
color brightblue "//.*"
color brightblue start="/\*" end="\*/"

# Reminders.
color ,yellow "\<(FIXME|TODO|XXX)\>"

# Trailing whitespace.
#color ,green "[[:space:]]+$"

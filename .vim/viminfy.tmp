# This viminfo file was generated by Vim 7.4.
# You may edit it if you are careful!

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0/wordcount

# Last Substitute Search Pattern:
~MSle0~&\w\+

# Last Substitute String:
$\r#

# Command Line History (newest to oldest):
:tabedit! ~/Documents/assignments/security\ management/essay.md
:tabedit! ~/Documents/assignments/security\ management/notes.md
:w
:%s/\w\+//en
:c
:tabedit!
:w 
:!echo ~/Documents/assignments/security\ management/essay.html \| xclip -selection c -i
:tabedit! ~/Documents/assignments/security\ management/sources
:tabedit! ~/Documents/assignments/security\ management/notes.html
:autocmd BufWritePost
:tab help 
:h
:let @+ = "let cnt=0 | g/./let cnt+=len(split(getline('.'), '\W\+')) | set nohlsearch"
:echo "let cnt=0 | g/./let cnt+=len(split(getline('.'), '\W\+')) | set nohlsearch"
:let cnt=0 | g/./let cnt+=len(split(getline('.'), '\W\+')) | set nohlsearch
:let cnt=0 | g/./let cnt+=len(split(getline('.'), '\W\+')) | set nohl
:echo cnt
:let cnt=0 | g/./let cnt+=len(split(getline('.'), '\W\+'))
:echo split(output[2:])[0]
:redir END
:redir => output
:echo output[2:][0]
:echo output[2:]
:echo output[3:]
:echo output[1:]
:echo output[0]
:echo output
:redir output
:tab help wordcount()
:echo wordcount()
:tabedit! ~/.vimrc
:%s/
:'<,'>s/\%V\w\+//en
:tab help md
:m
:833
:tabedit! essay.md
:w Working/pmtimer.sh
:set filetype=sh
:q
:w Working/DList.hs
:set filetype=haskell
:tabedit! Working/example.c
:tab help gy
:'<,'>s/\%V\t/ /
:echo 
:echo hex(56)
:tab help :
:help uniq()

# Search String History (newest to oldest):
? ^#
? \w\+
? \s\+$
?/wordcount
? .
? \%V\w\+
? \t
?/base
? \%V\t
? \%v \t
? \%V\s\t
? \%V \t
?  \t
? \<char\>
?/fire
?/fire?
?/Config
? \<Config\>
?/Rule
?/size hint
? \<conf\>
?/inoremap <S-Return>
?/nn
?/`as` keyword
?/as keyword
?/tabstop
?/syntax
?/set list
?/4
? make-cons
?/0
?/.
?/.jpg
?/dwm
?/|
?/\|-
?/?
?/т
? \<T\>
?/lightline
?/awk
? \<ARRAY\>
?/static void\ndrawmenu
?/static void\rdrawmenu
?/static void drawmenu
?/TEXTW
?/enums
?/set re
? \<onemore\>
?/onemore

# Expression History (newest to oldest):
=2500 / 3
=hex(line('.') - 363)
=output
=out
=syntax match quoteblock /"[^"]\+"/ contains=@NoSpellsyntax match quoteblock /'[^']\+'/ contains=@NoSpellsyntax match quoteblock /`[^`]\+`/ contains=@NoSpell
=expand('<cfile>')GF
=mode()
=tpath
=768    * 2
=1366*2
=getchar()
=feedkeys('q:')
=split(getline(line('.')))[1:]
=split(getline(line('.')))[0]
=2 ^ 64
=2 ** 64
=34598763
=56 + 890
=str
=''
=ControlKey()e
=ControlKe
=""
="lkdjfhdflkghj"
=ControlKey()|''
=
=command
=line('.')
=system("awk '{ print FNR $0 }'", @n)
=system("awk '{ print FNR \" \" $0 }'", @")
=selection
=input('V-Replace» ')
=let blah = 7
=blah
=var
=shellescape(input('Awk » '))
=expand('%')
=system("! bash -c 'aesthetic fuck'")
=system("! bash -c aesthetic fuck")
=system("! aesthetic fuck")
=:r !date
=expand('%:p')
=ln
=.
=word
=s
=@s
="lsekjfh"
=&s

# Input Line History (newest to oldest):
@column -t
@dmenu
@cpp
@column -t | expand
@column  -t 
@column  -t -s ' '
@column  -t | sed 's/  / /g'
@columnt -t | sed 's/  / /g'
@column
@{ print "wp_"(FNR+197)$0 }
@{ print "wp_"(FNR+203)$0 }
@pandoc -t beamer -o pres.pdf
@pandoc -t latex -o pres.pdf
@pandoc -t markdown
@/^$/{ print }; /^.+$/{ acc=0; for(i=1;i<NF;i++){ acc=acc+$i; }; print acc }
@/^.+$/{ acc=0; for(i=1;i<NF;i++){ acc=acc+$i; }; print acc }
@aesthetica
@aesthetic
@/^.+$/{ acc=0; for(i=1;i<NF;i++){ acc=acc+$i; }; print acc }	
@/^.\+$/{ acc=0; for(i=1;i<NF;i++){ acc=acc+$i; }; print acc }
@{ acc=0; for(i=1;i<NF;i++){ acc=acc+$i; }; print acc }
@{ acc=0; for (i=1;i<NF;i++){ acc += $i; }; print acc }
@tabedit! 
@{ print $0; print "\n\n" }
@{ print $0; print "\n" }
@{ print $0; print }
@nl
@dlsjhflsdkjfh
@{ print "set " $0 }
@mailx -r "Arthur@gov.uk" ArthurRThorp@outlook.com | sendmail -q
@mailx -r "Arthur@gov.uk" ArthurRThorp@outlook.com | sendmail -q
@pandoc -t html5 | mailx -s Fuck arthurrthorp@outlook.com
@pandoc -t markdown | mailx -s Fuck arth